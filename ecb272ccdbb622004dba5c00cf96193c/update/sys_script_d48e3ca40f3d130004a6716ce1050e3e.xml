<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_sigr_sisk_hr_co_leavers</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Leaver - On Insert</name>
        <order>500</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	//set leaving date
	current.leaving_date = current.last_date_of_employment;
	if(current.last_date_of_work > current.last_date_of_employment){
		current.leaving_date = current.last_date_of_work;
	}
	
	//set watchlists
	var country = current.company.country;
	
	//set name
	if(!current.name){
		current.name = current.leaver.name;
	}
	
	var staff = new GlideRecord('x_sigr_sisk_hr_co_staff_list');
	
	if(country == 'Sweden'){
		country = 'Ireland';
	}
	staff.addQuery('country', country);
	staff.query();
	
	while(staff.next()){
		if(staff.name == 'access'){
			current.access_staff = staff.staff;
		}
		if(staff.name == 'application'){
			current.application_staff = staff.staff;
		}
		if(staff.name == 'finance'){
			current.finance_staff = staff.staff;
		}
		if(staff.name == 'fleet' && current.company_car){
			current.fleet_staff = staff.staff;
		}
		if(staff.name == 'fuel_card' && current.fuel_card){
			current.fleet_staff = staff.staff;
		}
		if(staff.name == 'hr'){
			current.hr_staff = staff.staff;
		}
		if(staff.name == 'hseq'){
			current.hseq_staff = staff.staff;
		}
		if(staff.name == 'payroll'){
			current.payroll_staff = staff.staff;
		}
	}
	
	if(current.leaver){
		//set subject
		current.short_description = current.leaver.name + ' - ' + current.company.name + ' - ' + current.leaving_date.getDisplayValue();
		current.regional_staff = current.region_division.other_contacts;
		
		//create leaver request
		var cart = new global.Cart();
		
		var item = cart.addItem('6f3809bc0ffe1640d459936792050eff');
		cart.setVariable(item, 'leaver_name', current.leaver);
		cart.setVariable(item, 'leaver_email_redirect', current.redirect_email_to);
		cart.setVariable(item, 'leaving_date', current.leaving_date);
		cart.setVariable(item, 'leaver_mobile', swap(current.keep_mobile));
		cart.setVariable(item, 'leaver_keep_mobile', current.keep_mobile);
		cart.setVariable(item, 'leaver_keep_number', current.keep_mobile_number);
		cart.setVariable(item, 'leavel_cancer_number', swap(current.keep_mobile_number));
		cart.setVariable(item, 'leaver_number', current.mobile_number);
		cart.setVariable(item, 'leaver_other_equip', current.other_devices);
		
		var newSerReq = cart.placeOrder();
		newSerReq.opened_by = '6816f79cc0a8016401c5a33be04be441'; // admin
		newSerReq.requested_for = current.opened_by;
		newSerReq.due_date = current.leaving_date;
		newSerReq.u_disable_notification = true;
		newSerReq.update();
		
		var activityLogMsg = 'Service Request ' + newSerReq.number + ' is created';
		
		current.work_notes = activityLogMsg;
		current.request_item = getRITM(newSerReq.sys_id);
		current.update();
	}
	
	function getRITM(serReq) {
		var grRITM = new GlideRecord('sc_req_item');
		grRITM.addQuery('request',serReq);
		grRITM.query();
		
		if(grRITM.next()) {
			return grRITM.sys_id;
		}
		return '';
	}
	
})(current, previous);

function swap(value){
	if(value){
		return false;
	}
	if(!value){
		return true;
	}
}
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>r.callan@siskgroup.ie</sys_created_by>
        <sys_created_on>2018-04-27 16:07:04</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>d48e3ca40f3d130004a6716ce1050e3e</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Leaver - On Insert</sys_name>
        <sys_overrides/>
        <sys_package display_value="Sisk Hr Contracts" source="x_sigr_sisk_hr_co">ecb272ccdbb622004dba5c00cf96193c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Sisk Hr Contracts">ecb272ccdbb622004dba5c00cf96193c</sys_scope>
        <sys_update_name>sys_script_d48e3ca40f3d130004a6716ce1050e3e</sys_update_name>
        <sys_updated_by>r.callan@siskgroup.ie</sys_updated_by>
        <sys_updated_on>2019-10-30 14:29:13</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
